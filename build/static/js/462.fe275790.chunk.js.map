{"version":3,"file":"static/js/462.fe275790.chunk.js","mappings":"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","sources":["components/UI/CartIcon.jsx","components/UI/Popup.jsx","components/Songs/Song.js","components/Songs/Songs.jsx"],"sourcesContent":["import Badge from '@mui/material/Badge';\r\nimport { styled } from '@mui/material/styles';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport Slide from '@mui/material/Slide';\r\n// import useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\nconst theme = createTheme({\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 900,\r\n      lg: 1200,\r\n      xl: 1536,\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: '#a4a4a4',\r\n    },\r\n    secondary: {\r\n      main: '#202020',\r\n    },\r\n  },\r\n});\r\n// const color = 'rgba(17, 17, 17, 0.9)';\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  '& .MuiBadge-badge': {\r\n    border: `2px solid #fff`,\r\n    fontFamily: 'inherit',\r\n  },\r\n}));\r\n\r\nexport default function CartIcon({ count, onClick }) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Slide direction=\"left\" in={count !== 0} mountOnEnter unmountOnExit>\r\n        <IconButton\r\n          className=\"mui-fixed\"\r\n          size=\"medium\"\r\n          onClick={onClick}\r\n          sx={{\r\n            position: 'fixed',\r\n            right: '5rem',\r\n            top: '8rem',\r\n            zIndex: 1001,\r\n            [theme.breakpoints.down('md')]: {\r\n              top: '0.7rem',\r\n              right: '6rem',\r\n            },\r\n          }}\r\n        >\r\n          <StyledBadge\r\n            badgeContent={count}\r\n            color=\"error\"\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            overlap=\"rectangular\"\r\n            variant=\"standard\"\r\n            // sx={{ fontFamily: 'unset !important' }}\r\n          >\r\n            <ShoppingCartIcon fontSize=\"large\" color=\"primary\" />\r\n          </StyledBadge>\r\n        </IconButton>\r\n      </Slide>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport DeleteForeverRoundedIcon from '@mui/icons-material/DeleteForeverRounded';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport ContentPasteIcon from '@mui/icons-material/ContentPaste';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\r\nimport TelegramIcon from '@mui/icons-material/Telegram';\r\nimport Box from '@mui/material/Box';\r\nimport CartIcon from './CartIcon';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport './Popup.scss';\r\n\r\nexport default function Popup({ count, tracks, setTracks }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  // const { tracks, setTracks } = useContext(TracksContext);\r\n  // const [copied, setCopied] = useState(false);\r\n\r\n  // const handleCopy = () => {\r\n  //   setCopied(true);\r\n  //   setTimeout(() => setCopied(false), 2000);\r\n  // };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClickOpenSnack = () => {\r\n    setOpenSnack(true);\r\n  };\r\n\r\n  const handleCloseSnack = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenSnack(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCleanTracks = () => {\r\n    setTracks(tracks.filter((track) => !track));\r\n    setOpen(false);\r\n  };\r\n\r\n  const deleteSongHandler = (song) => {\r\n    const updatedTracks = tracks.map((track) =>\r\n      track.song === song ? { ...track, hidden: true } : track\r\n    );\r\n    setTracks(updatedTracks);\r\n    setTimeout(() => {\r\n      setTracks(updatedTracks.filter((track) => track.song !== song));\r\n    }, 200);\r\n    if (tracks.length === 1) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const theme = createTheme({\r\n    breakpoints: {\r\n      values: {\r\n        xs: 0,\r\n        sm: 450,\r\n        md: 900,\r\n        lg: 1200,\r\n        xl: 1536,\r\n      },\r\n    },\r\n    palette: {\r\n      primary: {\r\n        main: '#a4a4a4',\r\n      },\r\n      secondary: {\r\n        main: '#202020',\r\n      },\r\n      green: {\r\n        main: '#25d366',\r\n      },\r\n    },\r\n  });\r\n  const matches = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const totalLength = tracks\r\n    .reduce((acc, curr) => acc + parseFloat(curr.length), 0)\r\n    .toFixed(2);\r\n\r\n  const arraySongs = tracks.map((track) => {\r\n    return `${track.author} - ${track.song} (${track.length})\\n`;\r\n  });\r\n\r\n  const text = `${arraySongs.join(\r\n    ''\r\n  )}\\nКол-во песен: ${count}\\nОбщее время выступления: ${totalLength}`;\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={theme}>\r\n        <CartIcon count={count} onClick={handleClickOpen} />\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          maxWidth=\"md\"\r\n          fullScreen={matches}\r\n        >\r\n          <DialogTitle className=\"popup__header\" sx={{ fontFamily: 'unset' }}>\r\n            Ваш сет-лист\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              sx={{ p: 0.5, float: 'right' }}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <ul className=\"popup-titles\">\r\n              <li className=\"popup-titles__row\">\r\n                <span className=\"popup__title-song\">Композиция</span>\r\n                {/* <span className=\"popup__title-length \">Длительность</span> */}\r\n              </li>\r\n            </ul>\r\n            <ul>\r\n              {tracks.map((track) => {\r\n                return (\r\n                  <li\r\n                    key={track.song}\r\n                    className={`trackItem ${track.hidden ? 'hidden' : ''}`}\r\n                  >\r\n                    <div className=\"songs-list__author popup-author\">\r\n                      {track.author}&nbsp;\r\n                    </div>\r\n                    <div className=\"songs-list__song popup-song\">\r\n                      &mdash;&nbsp;{track.song}\r\n                    </div>\r\n                    <Tooltip title=\"удалить\">\r\n                      <div className=\"songs-list__play-button\">\r\n                        <IconButton\r\n                          color=\"inherit\"\r\n                          onClick={() => {\r\n                            deleteSongHandler(track.song);\r\n                            setTracks(\r\n                              tracks.map((t) => {\r\n                                if (t.song === track.song) {\r\n                                  return { ...t, hidden: true };\r\n                                }\r\n                                return t;\r\n                              })\r\n                            );\r\n                          }}\r\n                        >\r\n                          <DeleteForeverRoundedIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </Tooltip>\r\n                    <div className=\"songs-list__length popup-length\">\r\n                      {track.length.replace('.', ':')}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            {tracks.length === 0 && <div className=\"noTracks\">Список пуст</div>}\r\n            <div className=\"popup-total\">\r\n              <div className=\"popup-total__title\">Итого:</div>\r\n              <div className=\"popup-total__songs\">\r\n                Песен:&nbsp;\r\n                <span className=\"popup-total__count\">{count}</span>\r\n              </div>\r\n              <div className=\"popup-total__length\">\r\n                Общее время:&nbsp;\r\n                <span className=\"popup-total__count\">{totalLength}</span>\r\n              </div>\r\n            </div>\r\n            <p className=\"paragraph after-songs-list\">\r\n              &lowast;&nbsp;Минимальная длительность выступления - 90 минут.\r\n              Программу можно разделить на блоки как Вам удобно. Например: 3 по\r\n              30 минут или 2 по 45 минут.\r\n            </p>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap',\r\n                margin: '1rem 0 0 0 ',\r\n              }}\r\n            >\r\n              <p className=\"paragraph copy-instructions\">\r\n                Скопируйте сет-лист и отправьте его нам прямо сейчас!\r\n              </p>\r\n              <CopyToClipboard text={text}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"error\"\r\n                  endIcon={<ContentPasteIcon />}\r\n                  onClick={handleClickOpenSnack}\r\n                >\r\n                  Скопировать сет-лист\r\n                </Button>\r\n              </CopyToClipboard>\r\n              <Box\r\n                sx={{\r\n                  boxShadow: '1px 1px 3px #00000035',\r\n                  borderRadius: '0.5rem',\r\n                  padding: '0.3rem',\r\n                  margin: '1rem 0 0 0 ',\r\n                }}\r\n              >\r\n                <IconButton\r\n                  href=\"https://api.whatsapp.com/send?phone=79264610236\"\r\n                  target=\"_blank\"\r\n                  color=\"green\"\r\n                  size=\"large\"\r\n                >\r\n                  <WhatsAppIcon fontSize=\"large\" />\r\n                </IconButton>\r\n                <IconButton\r\n                  href=\"https://t.me/pokerface_coverband\"\r\n                  target=\"_blank\"\r\n                  color=\"info\"\r\n                  size=\"large\"\r\n                >\r\n                  <TelegramIcon fontSize=\"large\" />\r\n                </IconButton>\r\n              </Box>\r\n            </Box>\r\n            <Snackbar\r\n              anchorOrigin={\r\n                matches\r\n                  ? { vertical: 'bottom', horizontal: 'center' }\r\n                  : { vertical: 'top', horizontal: 'center' }\r\n              }\r\n              open={openSnack}\r\n              autoHideDuration={3000}\r\n              onClose={handleCloseSnack}\r\n              sx={matches ? { marginBottom: '3.4rem' } : null}\r\n            >\r\n              <MuiAlert\r\n                elevation={2}\r\n                variant=\"filled\"\r\n                onClose={handleCloseSnack}\r\n                severity=\"success\"\r\n                sx={{ width: '100%' }}\r\n              >\r\n                Сет-лист скопирован\r\n              </MuiAlert>\r\n            </Snackbar>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={handleCleanTracks}\r\n              size=\"large\"\r\n            >\r\n              Очистить\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={handleClose}\r\n              size=\"large\"\r\n            >\r\n              Закрыть\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState, lazy, Suspense } from 'react';\r\n\r\nconst SongWithoutAudio = lazy(() => import('./SongWithoutAudio'));\r\nconst SongWithAudio = lazy(() => import('./SongWithAudio'));\r\nfunction Song({ author, song, length, src, tracks, addSongHandler }) {\r\n  // const { tracks } = useContext(TracksContext);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    addSongHandler(author, song, length);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setChecked(\r\n      tracks.find((track) => {\r\n        return track.song === song;\r\n      })\r\n    );\r\n  }, [tracks, song]);\r\n\r\n  if (!src) {\r\n    return (\r\n      <Suspense>\r\n        <SongWithoutAudio\r\n          {...{ checked, author, song, length, handleToggle }}\r\n        />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Suspense>\r\n      <SongWithAudio\r\n        {...{ checked, author, song, length, handleToggle, src }}\r\n      />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default Song;\r\n","import './Songs.scss';\r\nimport { useEffect, useState } from 'react';\r\nimport Popup from '../UI/Popup';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport Song from './Song';\r\n// import ruSongs from './ru_songs.json';\r\n// import engSongs from './eng_songs.json';\r\nconst songsRuUrl = './ru_songs.json';\r\nconst songsEngUrl = './eng_songs.json';\r\n// const songsRuUrl = 'https://pokerfaceband.ru/ru_songs.json';\r\n// const songsEngUrl = 'https://pokerfaceband.ru/eng_songs.json';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#f5f5f5',\r\n      my: '#000000',\r\n    },\r\n    secondary: {\r\n      main: '#000000',\r\n    },\r\n    contrastThreshold: 5,\r\n    tonalOffset: 0.2,\r\n  },\r\n});\r\n\r\nfunction Songs({ lang, ruSongs, setRuSongs, engSongs, setEngSongs }) {\r\n  // const [ruSongs, setRuSongs] = useState([]);\r\n  // const [engSongs, setEngSongs] = useState([]);\r\n\r\n  // const { ruSongs, setRuSongs, engSongs, setEngSongs } =\r\n  //   useContext(SongListContext);\r\n  const [tracks, setTracks] = useState([]); //Добавление песен в массив\r\n\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const addSongHandler = (author, song, length, src) => {\r\n    const selectSongs = {\r\n      author,\r\n      song,\r\n      length,\r\n      src,\r\n    };\r\n\r\n    setTracks([...tracks, selectSongs]);\r\n    tracks.find((track) => {\r\n      return track.song === song;\r\n    }) && setTracks(tracks.filter((track) => track.song !== song)); //Удаление песни из массива при потворном клике на неё\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const resRu = await fetch(songsRuUrl);\r\n        const resEng = await fetch(songsEngUrl);\r\n        const ruSong = await resRu.json();\r\n        const engSong = await resEng.json();\r\n        setRuSongs(ruSong);\r\n        setEngSongs(engSong);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [setEngSongs, setRuSongs]);\r\n  if (error) {\r\n    return <h3>Error: {error}</h3>;\r\n  }\r\n  return (\r\n    <>\r\n      <Popup count={tracks.length} tracks={tracks} setTracks={setTracks} />\r\n      <ThemeProvider theme={theme}>\r\n        <Accordion\r\n          className=\"accordion\"\r\n          elevation={4}\r\n          sx={{\r\n            backgroundColor: 'primary.light',\r\n            width: '40%',\r\n            margin: 'auto',\r\n            transition: 'width 1s ease',\r\n          }}\r\n        >\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon color=\"secondary\" />}>\r\n            <h4 className=\"songs-list__header\">{lang}</h4>\r\n          </AccordionSummary>\r\n          <AccordionDetails color=\"primary\">\r\n            <h4 className=\"songs-list__title-length\">Длительность</h4>\r\n            <ul>\r\n              {isLoading ? (\r\n                <h3>Loading...</h3>\r\n              ) : lang === 'Отечественные' ? (\r\n                ruSongs.map((song) => {\r\n                  return (\r\n                    <Song\r\n                      addSongHandler={addSongHandler}\r\n                      key={song.song}\r\n                      tracks={tracks}\r\n                      {...song}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                engSongs.map((song) => {\r\n                  return (\r\n                    <Song\r\n                      addSongHandler={addSongHandler}\r\n                      key={song.song}\r\n                      {...song}\r\n                      tracks={tracks}\r\n                    />\r\n                  );\r\n                })\r\n              )}\r\n            </ul>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\nexport default Songs;\r\n"],"names":["theme","createTheme","breakpoints","values","xs","sm","md","lg","xl","palette","primary","main","secondary","StyledBadge","styled","Badge","border","fontFamily","CartIcon","count","onClick","ThemeProvider","Slide","direction","in","mountOnEnter","unmountOnExit","IconButton","className","size","sx","position","right","top","zIndex","down","badgeContent","color","anchorOrigin","vertical","horizontal","overlap","variant","ShoppingCart","fontSize","Popup","tracks","setTracks","useState","open","setOpen","openSnack","setOpenSnack","handleCloseSnack","event","reason","handleClose","green","matches","useMediaQuery","totalLength","reduce","acc","curr","parseFloat","length","toFixed","arraySongs","map","track","author","song","text","join","Dialog","onClose","maxWidth","fullScreen","DialogTitle","p","float","Close","DialogContent","hidden","Tooltip","title","updatedTracks","setTimeout","filter","deleteSongHandler","t","DeleteForeverRounded","replace","Box","display","flexDirection","alignItems","justifyContent","flexWrap","margin","Button","endIcon","ContentPaste","boxShadow","borderRadius","padding","href","target","WhatsApp","Telegram","Snackbar","autoHideDuration","marginBottom","elevation","severity","width","DialogActions","SongWithoutAudio","lazy","SongWithAudio","src","addSongHandler","checked","setChecked","handleToggle","useEffect","find","Suspense","songsRuUrl","songsEngUrl","my","contrastThreshold","tonalOffset","lang","ruSongs","setRuSongs","engSongs","setEngSongs","error","setError","isLoading","setIsLoading","selectSongs","fetch","resRu","resEng","json","ruSong","engSong","message","fetchData","Accordion","backgroundColor","transition","AccordionSummary","expandIcon","ExpandMore","AccordionDetails"],"sourceRoot":""}